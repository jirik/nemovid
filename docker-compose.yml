version: '3.3'

services:
   files:
      container_name: files
      build:
        context: server/files
        dockerfile: Dockerfile
      image: files:latest
      user: ${UID_GID}
      command: bash -c "fastapi dev src/main.py --host 0.0.0.0"
      environment:
        - PYRIGHT_PYTHON_CACHE_DIR=/tmp
        - DATABASE_URL=${DATABASE_URL}?search_path=files&sslmode=disable
        - DBMATE_MIGRATIONS_DIR=./src/db/migrations
      env_file:
        - .env
      volumes:
        - ./data:/data
        - ./server/files/src:/app/src
        - ./server/common/ruff.toml:/app/ruff.toml
        - ./server/common/src/common:/app/common
      ports:
        - "8000:8000"

   ogr2ogr:
      container_name: ogr2ogr
      build:
        context: server/ogr2ogr
        dockerfile: Dockerfile
      image: ogr2ogr:latest
      user: ${UID_GID}
      command: bash -c "source .venv/bin/activate && fastapi dev src/main.py --host 0.0.0.0"
      env_file:
        - .env
      volumes:
        - ./data:/data
        - ./server/ogr2ogr/src:/app/src
        - ./server/common/ruff.toml:/app/ruff.toml
        - ./server/common/src/common:/app/common
      ports:
        - "8001:8000"

   qgis:
      container_name: qgis
      build:
        context: server/qgis
        dockerfile: Dockerfile
      image: qgis:latest
      user: ${UID_GID}
      command: bash -c "source .venv/bin/activate && fastapi dev src/main.py --host 0.0.0.0"
      environment:
        - PYRIGHT_PYTHON_CACHE_DIR=/tmp/pyright
        - QT_QPA_PLATFORM=offscreen
        - XDG_RUNTIME_DIR=/tmp/runtime-ubuntu
      env_file:
        - .env
      volumes:
        - ./data:/data
        - ./server/qgis/src:/app/src
        - ./server/common/ruff.toml:/app/ruff.toml
        - ./server/common/src/common:/app/common
      ports:
        - "8002:8000"

   vfk:
      container_name: vfk
      image: files:latest
      user: ${UID_GID}
      command: bash -c "fastapi dev src/main.py --host 0.0.0.0"
      environment:
        - PYRIGHT_PYTHON_CACHE_DIR=/tmp
      env_file:
        - .env
      volumes:
        - ./data:/data
        - ./server/vfk/src:/app/src
        - ./server/common/ruff.toml:/app/ruff.toml
        - ./server/common/src/common:/app/common
      ports:
        - "8003:8000"

   postgres:
      container_name: postgres
      build:
        context: server/postgres
        dockerfile: Dockerfile
      image: postgres:latest
      user: ${UID_GID}
      volumes:
        - ./server/postgres/data:/var/lib/postgresql/data
        - ./server/files/src:/app/files
      ports:
        - "25433:5432"
      environment:
         - POSTGRES_USER=nemovid
         - POSTGRES_PASSWORD=nemovid_pwd
         - POSTGRES_DB=nemovid
         - DATABASE_URL=${DATABASE_URL}
